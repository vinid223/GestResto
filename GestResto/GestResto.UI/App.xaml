<Application x:Class="GestResto.UI.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

        <Style x:Key="BoutonGrid">
            <Setter Property="Grid.Margin" Value="0"/>
            <Setter Property="Grid.Height" Value="70"/>
            <Setter Property="Grid.Width" Value="80"/>
        </Style>
            
        <Style x:Key="BoutonBorder">
            <Setter Property="Border.Height" Value="40"/>
            <Setter Property="Border.Width" Value="40"/>
            <Setter Property="Border.BorderThickness" Value="1, 1, 1, 3"/>
            <Setter Property="Border.BorderBrush" Value="#1C2841"/>
            <Setter Property="Border.CornerRadius" Value="5"/>
            <Setter Property="Border.Background" Value="White"/>
        </Style>

        <Style x:Key="BoutonImage">
            <Setter Property="Image.Height" Value="30"/>
            <Setter Property="Image.Width" Value="30"/>
            <Setter Property="Image.VerticalAlignment" Value="Center"/>
            <Setter Property="Image.HorizontalAlignment" Value="Center"/>
        </Style>

        <DropShadowEffect x:Key="BoutonLabelShadowEffect" ShadowDepth="1" BlurRadius="10" Color="Black"  />
        <Style x:Key="BoutonLabel">
            <Setter Property="Label.Height" Value="30"/>
            <Setter Property="Grid.Row" Value="2"/>
            <Setter Property="Label.HorizontalAlignment" Value="Center"/>
            <Setter Property="Label.FontSize" Value="12"/>
            <Setter Property="Label.Foreground" Value="White"/>
            <Setter Property="Label.Effect" Value="{StaticResource BoutonLabelShadowEffect}" />
        </Style>


        <Style
        x:Key="ButtonFocusVisual">
            <Setter
            Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="MetroButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
            <Setter Property="Background" Value="#EEEEEEEE"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="10 5"/>
            <Setter Property="FontSize" Value="14" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border
                                x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />

                            <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="OpacityMask" Value="#91919188"/> <!-- AA888888 -->
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <!-- <Setter Property="Background" Value="#C4C4C4"/>
                               <Setter Property="Foreground" Value="White"/>-->
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Button" BasedOn="{StaticResource MetroButton}">
        </Style>


        <Style x:Key="BoutonList" TargetType="Button" BasedOn="{StaticResource MetroButton}">
            <Setter Property="Height"  Value="50"/>
        </Style>

        <!-- Style pour un ListboxItem -->
        <Style x:Key="ListboxItemRow" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Height"  Value="30"/>
            <Setter Property="FontSize"  Value="15"/>
        </Style>

        <!-- Style pour un ListboxItem qui est une seconde ligne. Une ligne sur deux a un différent background -->
        <Style x:Key="ListboxItemSecondRow" TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource ListboxItemRow}">
            <Setter Property="Background"  Value="#cee9ff"/>
        </Style>

        <!-- Style pour un ListboxItem qui est un item enfant -->
        <Style x:Key="ListboxItemRowChild" TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource ListboxItemRow}">
            <Setter Property="Padding"  Value="10,0,0,0"/>
        </Style>

        <!-- Style pour un ListboxItem qui est est une seconde ligne et qui est un item enfant-->
        <Style x:Key="ListboxItemSecondRowChild" TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource ListboxItemSecondRow}">
            <Setter Property="Padding"  Value="10,0,0,0"/>
        </Style>

        <Style TargetType="{x:Type ListBoxItem}"> <!-- x:Key="ListBoxItemRows"-->
            <Style.Triggers>
                <Trigger Property="ItemsControl.AlternationIndex"  Value="0">
                    <Setter Property="Background" Value="White" />
                </Trigger>
                <Trigger Property="ItemsControl.AlternationIndex"  Value="1">
                    <Setter Property="Background" Value="#cee9ff" />
                </Trigger>
            </Style.Triggers>
        </Style>


        <!-- Boutons des items dans la listes de boutons dans l'écran de la commande. -->
        <Style x:Key="BoutonItem" TargetType="Button" BasedOn="{StaticResource MetroButton}">
            <Setter Property="Height"  Value="80" />
            <Setter Property="Width" Value="130" />
            <Setter Property="Margin" Value="0,0,5,5" />
            <Setter Property="Focusable" Value="False" />
        </Style>

        <!-- Style ListView -->
        <Style x:Key="styleModif" TargetType="{x:Type Button}" BasedOn="{StaticResource BoutonList}">
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=EstModifie}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" Value="#D64747" />
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ListBoxFICF" TargetType="{x:Type Label}">
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="FontSize" Value="18"/>
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=EstComplementaire}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Padding" Value="20,0,0,0" />
                    <Setter Property="VerticalAlignment" Value="Center"/>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>


        <Style x:Key="BoutonImagePaiement">
            <Setter Property="Image.Height" Value="65"/>
            <Setter Property="Image.Width" Value="100"/>
            <Setter Property="Image.VerticalAlignment" Value="Center"/>
            <Setter Property="Image.HorizontalAlignment" Value="Center"/>
        </Style>

        <Style x:Key="NoChromeButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="Chrome" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD"/>
                                <Setter Property="Opacity" TargetName="Chrome" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Application.Resources>
</Application>
